apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: test-vsa-sign-
  namespace: managed-namespace
  labels:
    app.kubernetes.io/part-of: slsa-konflux-test
    test.slsa.dev/type: vsa-sign
  annotations:
    test.slsa.dev/description: "Test PipelineRun for vsa-sign task validation"
spec:
  pipelineSpec:
    description: >-
      Test pipeline for validating vsa-sign task functionality
      in managed context with mock trust artifacts.
    
    workspaces:
      - name: trust-artifacts
        description: Trust artifacts from tenant context
      - name: signing-config
        description: Signing key configuration
      - name: attestations
        description: Signed attestation output
    
    tasks:
      - name: setup-trust-artifacts
        taskSpec:
          description: Create mock trust artifacts for VSA signing test
          workspaces:
            - name: trust-artifacts
          steps:
            - name: create-mock-vsa-payload
              image: registry.redhat.io/ubi9/ubi:latest
              script: |
                #!/bin/bash
                set -euo pipefail
                
                echo "ðŸ“¦ Creating mock trust artifacts for VSA signing test..."
                
                # Create VSA payload that would come from conforma-vsa task
                cat > $(workspaces.trust-artifacts.path)/vsa-payload.json <<EOF
                {
                  "predicate": {
                    "verifier": {
                      "id": "https://tenant.konflux.example.com/conforma-vsa",
                      "version": "v1.0.0"
                    },
                    "timeVerified": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
                    "resourceUri": "registry.example.com/test-app:v1.0.0",
                    "policy": {
                      "uri": "oci://quay.io/enterprise-contract/ec-policy-data@sha256:abc123",
                      "digest": {
                        "sha256": "abc123def456789"
                      }
                    },
                    "inputAttestations": [
                      {
                        "uri": "registry.example.com/test-app@sha256:def456",
                        "digest": {
                          "sha256": "def456789abc123"
                        }
                      }
                    ],
                    "verificationResult": "PASSED",
                    "verifiedLevels": ["SLSA_BUILD_LEVEL_3"],
                    "dependencyLevels": {
                      "registry.example.com/base:latest": "SLSA_BUILD_LEVEL_2"
                    },
                    "slsaVersion": "1.0"
                  }
                }
                EOF
                
                echo "âœ… Mock trust artifacts created"
                echo "ðŸ“„ VSA Payload:"
                cat $(workspaces.trust-artifacts.path)/vsa-payload.json | head -10
      
      - name: vsa-sign-test
        taskRef:
          name: vsa-sign
        runAfter:
          - setup-trust-artifacts
        params:
          - name: trustArtifactPath
            value: "$(workspaces.trust-artifacts.path)/vsa-payload.json"
          - name: subject
            value: "registry.example.com/test-app:v1.0.0"
          - name: signingKey
            value: "vsa-primary-key"
          - name: outputPath
            value: "/workspace/attestations/signed-vsa.json"
          - name: verifier-id
            value: "https://managed.konflux.example.com/vsa-signer"
          - name: verifier-version
            value: "v1.0.0-test"
        workspaces:
          - name: trust-artifacts
            workspace: trust-artifacts
          - name: signing-config
            workspace: signing-config
          - name: attestations
            workspace: attestations
  
  workspaces:
    - name: trust-artifacts
      emptyDir: {}
    - name: signing-config
      secret:
        secretName: vsa-signing-key
        optional: true
    - name: attestations
      emptyDir: {}
  
  timeouts:
    pipeline: "10m0s"
    tasks: "8m0s"